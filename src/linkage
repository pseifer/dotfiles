#!/bin/bash

# Creates links from $dot_target to $dot_dir
# (sourced from $3) for all files in $1.
# Ommits a warning for any active file, that doesn't
# exist in the $dot_dir directory.
#
# For all files (that aren't links) a backup is created
# in the $2 directory. If no backup is necessary, $2 is
# deleted (if empty). Hidden files are 'unhidden' by
# replacing '.' with 'hidden_' for convenience.


if [ $# -ne 3 ]; then
    echo "Error: $(basename $0) was called with the wrong number of arguments."
    echo "Usage: $(basename $0) [MODULES-CONFIG] [BACKDIR] [CONFIG]"
    exit 1
fi


modules="$1"
backup="$2"
config="$3"

source "$config"


while read line; do
    source=$(echo $line | awk '{print $1;}')
    target=$(echo $line | awk '{print $2;}')
    dir_path=$(dirname "$target")

    if [ ! -z $source ] && [ -e "$dot_dir/$source" ]; then
        echo -e -n "\n\e[32mlinking\e[39m dotfiles/$source \e[32m-->\e[39m $dot_target/$target"

        # If a link lives at target location, remove it.
        if [ -L "$dot_target/$target" ]; then
            rm "$dot_target/$target"

        # If a file lives at target location, back it up.
        elif [ -e "$dot_target/$target" ]; then
            bak_dir_path=$(echo $dir_path | sed 's/\./hidden_/g')
            mkdir -p "$backup/$bak_dir_path"
            mv "$dot_target/$target" "$backup/$bak_dir_path/$target_bak"
            echo -e -n " (\e[32mbackup stored\e[39m)"
        fi

        # Finally, create new link from target->source.
        mkdir -p "$dot_target/$dir_path"
        ln -s "$dot_dir/$source" "$dot_target/$target"
    else
        echo -e "\n\e[33mwarning\e[39m active file \e[33m'$source'\e[39m doesn't exist."
    fi
done < $modules

# Trailing newline
echo

if find "$backup" -maxdepth 0 -empty | read v; then
    rm -rf "$backup"
fi
