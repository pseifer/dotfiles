#!/bin/bash

# Open argument files in emacsclient.
emacs_open() { command emacsclient $* -a= & disown }

# Setup the 'base' workspace.
tbase() {
    # Open the Vimwiki index.
    tmux rename-window 'notes'
    tmux send-keys -t 'notes' 'nb shell' 'Enter' 'edit 1' 'Enter'

    # Open a new task and calenar window.
    tmux new-window -n 'todo-cal'
    tmux send-keys -t 'todo-cal' 'nb shell' 'Enter' 'clear' 'Enter' 'tasks open' 'Enter'
    tmux split-window -h -l '50%'
    tmux send-keys -t 'todo-cal' 'vdirsyncer sync; clear; ical' 'Enter'

    # Open a final 'main' shell window for doing some stuff.
    tmux new-window -n 'main'
}

# Setup a generic development session in a certain directory,
# with a 70/30 split between VI and terminal, as well as an additional
# window (behind dev) for another terminal (cicle with C-a C-n / C-a C-p).
#
# Usage: tdev <path>* <name>* <command>* <pre-command>*
#   path: directory where environment is set up (default: pwd)
#   name: name of the tmux window (default: 'dev')
#   command: optional command to run in right 30%
#   pre-command: command to run before all others, everywhere; e.g.,
#                load python environment.
tdev() {
    dir="${1:-$PWD}"
    name="${2:-dev}"
    cmd="${3:-' '}"
    precmd="${4:-' '}"

    # Create a window (named $name) and start VI (after $precmd).
    tmux new-window -n "${name}" -c "$dir"
    tmux send-keys -t "${name}" "cd $dir; $precmd; clear; vi ." 'Enter'

    # Split one third off and run $precmd ; $cmd.
    tmux split-window -h -l '30%' -t "${name}"
    tmux send-keys -t "${name}" "cd $dir; $precmd; clear; $cmd" 'Enter'
    tmux last-pane # select VI

    # Create a swap window
    tmux new-window -n "${name}-swp"
    tmux send-keys -t "${name}-swp" "cd $dir; $precmd; clear" 'Enter'
    tmux last-window # select 'dev'
}

# Shorthand for running tdev for Python projects.
tpython() {
    dir="${1:-$PWD}"
    name="${2:-python}"
    tdev "${dir}" "${name}" python3 pyva
}

# Shorthand for running tdev for Scala projects.
tscala() {
    dir="${1:-$PWD}"
    name="${2:-scala}"
    tdev "${dir}" "${name}" sbt
}

# Shorthand for running tdev for Haskell projects.
thaskell() {
    dir="${1:-$PWD}"
    name="${2:-haskell}"
    tdev "${dir}" "${name}" ghci
}

# Print terminal colors.
colors() {
    printf "|039| \033[39mDefault \033[m  |049| \033[49mDefault \033[m  |037| \033[37mLight gray \033[m     |047| \033[47mLight gray \033[m\n"
    printf "|030| \033[30mBlack \033[m    |040| \033[40mBlack \033[m    |090| \033[90mDark gray \033[m      |100| \033[100mDark gray \033[m\n"
    printf "|031| \033[31mRed \033[m      |041| \033[41mRed \033[m      |091| \033[91mLight red \033[m      |101| \033[101mLight red \033[m\n"
    printf "|032| \033[32mGreen \033[m    |042| \033[42mGreen \033[m    |092| \033[92mLight green \033[m    |102| \033[102mLight green \033[m\n"
    printf "|033| \033[33mYellow \033[m   |043| \033[43mYellow \033[m   |093| \033[93mLight yellow \033[m   |103| \033[103mLight yellow \033[m\n"
    printf "|034| \033[34mBlue \033[m     |044| \033[44mBlue \033[m     |094| \033[94mLight blue \033[m     |104| \033[104mLight blue \033[m\n"
    printf "|035| \033[35mMagenta \033[m  |045| \033[45mMagenta \033[m  |095| \033[95mLight magenta \033[m  |105| \033[105mLight magenta \033[m\n"
    printf "|036| \033[36mCyan \033[m     |046| \033[46mCyan \033[m     |096| \033[96mLight cyan \033[m     |106| \033[106mLight cyan \033[m\n"
}

# Open some nextcloud app.
next() {
    # By default, open '/dashboard'.
    app="${1:-dashboard}"

    # Allow for short aliases.
    if [[ "calendar" =~ ^$app ]]; then
        nextapp="apps/calendar"
    elif [[ "contacts" =~ ^$app ]]; then
        nextapp="apps/contacts"
    elif [[ "files" =~ ^$app ]]; then
        nextapp="apps/files"
    elif [[ "cospend" =~ ^$app ]]; then
        nextapp="apps/cospend"
    elif [[ "photos" =~ ^$app ]]; then
        nextapp="apps/photos"
    elif [[ "notes" =~ ^$app ]]; then
        nextapp="apps/notes"
    elif [[ "tasks" =~ ^$app ]]; then
        nextapp="apps/tasks"
    elif [[ "cookbook" =~ ^$app ]]; then
        nextapp="apps/cookbook"
    elif [[ "settings" =~ ^$app ]]; then
        nextapp="settings/user"
    # If unknown, just try the full name.
    else
        nextapp="${app}"
    fi

    # Finally, open the nextapp Nextcloud app.
    open "https://cloud.seifer.me/${nextapp}" 1>/dev/null 2>/dev/null
}
