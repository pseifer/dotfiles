# ----- Basic tmux settings.
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

set -g default-command /bin/zsh
set -g default-shell /bin/zsh

set -g history-limit 100000
set -g mouse on 

set -s escape-time 20

# ----- Key mappings

# Set vi mode.
set-window-option -g mode-keys vi

# Set C-a as prefix.
unbind C-b
set -g prefix C-a
bind-key C-a send-prefix

# Start at 1, since 0 is way over there ->
set -g base-index 1
set -g pane-base-index 1

# Set new panes to open in current directory
# bind c new-window -c "#{pane_current_path}"

# Split like vim, open current path.
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
unbind '"'
unbind %

bind -r k swap-pane -U # Move pane up/left
bind -r h swap-pane -U # Move pane up/left
bind -r j swap-pane -D # Move pane down/right
bind -r l swap-pane -D # Move pane down/right

unbind H
bind -r K resize-pane -U 10 # Resize up
bind -r J resize-pane -D 10 # Resize down
bind -r H resize-pane -L 30 # Resize left
bind -r L resize-pane -R 30 # Resize right

bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X select-line
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# Rotate pane with panes in the *next* window.
bind-key C-n swap-pane -s :+.top \; rotate-window -Ut :+
bind-key C-p swap-pane -s :+.bottom \; rotate-window -Dt :+

# Enter copy mode with C-a C-u
unbind C-u
bind-key C-u copy-mode

# Reload with C-a r
bind r source-file ~/.tmux.conf

# ----- Title bar and Windows

set -g allow-rename off
set -g set-titles on
set -g set-titles-string "\'#S\' on #h : #T"

set -g window-status-format "#[fg=cyan]#I:#W"
set -g window-status-current-format "#[fg=green]#[bright]#I:#W#[nobright]"

# ----- TMUX / VIM integration

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# - Allow 'autoread' to work.
set -g focus-events on

# ---- Panes

set -g pane-border-style "bg=default fg=black"
set -g pane-active-border-style "bg=default fg=green"

# ---- Sessions

unbind C
# Interactively switch sessions.
bind-key Tab choose-session
# Create session.
bind-key C command-prompt -p "Create session with name:" "new-session -s '%%'"
# Next session: C-a )
# Previous session: C-a (

# ----- Status bar

set -g status-style "bg=default fg=default"

set -g status-interval 2
set -g status-left-length 90
set -g status-right-length 60

set -g status-left " #[bright]#[fg=green]#(whoami) #[nobright]#[fg=cyan]@#h#[fg=green]  "
set -g status-justify left
set -g status-right "#[fg=cyan] #W #[bright]#S#[nobright]#[fg=green]  #[fg=cyan]%a %d %b #[bright]#[fg=green]%R "
