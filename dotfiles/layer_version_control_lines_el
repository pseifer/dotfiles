;;; packages.el --- version-control-lines layer packages file for pacemacs.
;;
;; Author: Philipp Seifer <pseifer@uni-koblenz.de>
;;
;; This file is not part of GNU Emacs.
;;
;;; License: GPLv3

(defconst version-control-lines-packages
  '(visual-fill-column))

(defun version-control-lines/init-visual-fill-column ()
 (use-package visual-fill-column
  :init
    (progn
      ; Settings.
      (defconst WRAP-WIDTH 100 "The width of visual line wraps.")

      ; Electric dots insert newlines.
      (defun edot-electric-dot ()
        (interactive)
        (insert ".\n"))
      (defun edot-electric-exl ()
        (interactive)
        (insert "!\n"))
      (defun edot-electric-qum ()
        (interactive)
        (insert "?\n"))

      ; Rebind end-of-sentence and hook the electric dot to TeX mode.
      (defun edot-tex-hook ()
        (local-set-key (kbd ".") 'edot-electric-dot)
        (local-set-key (kbd "!") 'edot-electric-exl)
        (local-set-key (kbd "?") 'edot-electric-qum))
      (add-hook 'TeX-mode-hook 'edot-tex-hook)

      ;; Nuclear auto-fill off (alternatives seem to not work consistently).
      (add-hook 'TeX-mode-hook
        (lambda ()
          (make-local-variable 'fill-column)
          (setq fill-column 99999)))

      ;; Enable visual-fill-column in TeX.
      (add-hook 'TeX-mode-hook #'visual-fill-column-mode)

      ;; Set the width.
      (setq visual-fill-column-width WRAP-WIDTH)

      ;; Allow visual navigation with j/k or up/down.
      (evil-define-minor-mode-key 'motion 'visual-fill-column-mode
        ; navigate visual lines as if actual lines
        (kbd "j") #'evil-next-visual-line
        (kbd "k") #'evil-previous-visual-line
        ; and for plebs
        (kbd "<down>") #'evil-next-visual-line
        (kbd "<up>") #'evil-previous-visual-line
      )

      ; Also hook on visual-line-mode for proper word wrapping.
      (add-hook 'visual-fill-column-mode-hook #'visual-line-mode)

      ;; Change fringe indicators to something more unintrusive.
      (define-fringe-bitmap 'custom-right
        [#b00000000
         #b00000000
         #b00000100
         #b00000100
         #b00000100
         #b00000100
         #b00111100
         #b00000000])
      (define-fringe-bitmap 'custom-left
        [#b00000000
         #b00000000
         #b00000000
         #b00000000
         #b00000000
         #b00000000
         #b00000000
         #b00000000])
      (add-hook 'TeX-mode-hook
        (lambda ()
          (make-local-variable 'visual-line-fringe-indicators)
          (setq visual-line-fringe-indicators '(custom-left custom-right)))))))
